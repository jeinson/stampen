[{"path":"https://jeinson.github.io/stampen/articles/simulation_vignette.html","id":"tldr","dir":"Articles","previous_headings":"","what":"TLDR","title":"`stampen` Usage Vignette","text":"quick overview tool’s functionality, lazy.","code":"# Generate some null haplotypes test_data <-    simulate_null_haplotypes(     n_indvs = 500, n_genes = 500,      qtl_alpha = 1, qtl_beta = 1 # controls the qtl allele frequency distribution     # based on a Beta   )  # Characterize the haplotypes as high or low penetrance test_data_incl_beta <-    characterize_haplotypes(     test_data, beta_config = beta_config_sqtl   )  head(test_data_incl_beta) #>    gene    indv haplotype sqtl_af beta   hom  exp_beta #> 1 gene1   indv2      ABAb   0.937    0  TRUE 0.9954997 #> 2 gene1 indv176      AbAB   0.937    0  TRUE 0.9954997 #> 3 gene2 indv170      ABAb   0.740    0  TRUE 0.8901170 #> 4 gene3 indv163      abaB   0.436    1  TRUE 0.3740633 #> 5 gene4  indv23      ABab   0.845    1 FALSE 0.5000000 #> 6 gene4 indv102      AbAB   0.845    0  TRUE 0.9674480  # Run the Poisson-binomial bootstrap test bootstrap_test(test_data_incl_beta, B = 1000) #>  bootstrap_p      epsilon        lower        upper n_haplotypes  #>   0.22400000   0.03118925  -0.01184589   0.07192872 709.00000000"},{"path":"https://jeinson.github.io/stampen/articles/simulation_vignette.html","id":"simulating-data","dir":"Articles","previous_headings":"TLDR","what":"Simulating Data","title":"`stampen` Usage Vignette","text":"vignette, demonstrate simulate haplotype data stampen package, test see enriched haplotypes reduce variant penetrance. First, simulate dataset haplotypes 500 individuals, 500 genes may carry rare variants. simulate_null_haplotypes function generates data haplotypes low penetrance high penetrance configurations equally likely occur. default, draw allele frequencies uniform distribution, can adjusted setting qtl_alpha qtl_betaparameters. haplotype column discussed . default configuration, QTL allele frequency uniform.  can also adjust beta distribution parameters simulate data arises allele frequency distribution may occur among different sets QTLs, populations.","code":"set.seed(1234567890) test_data <- simulate_null_haplotypes(   n_indvs = 500, n_genes = 500,    qtl_alpha = 1, qtl_beta = 1) # leave the default hyperparameters head(test_data) #>    gene    indv haplotype qtl_af #> 1 gene1 indv462      abaB  0.135 #> 2 gene2 indv126      ABab  0.187 #> 3 gene2 indv177      aBab  0.187 #> 4 gene2 indv215      aBab  0.187 #> 5 gene2 indv268      abaB  0.187 #> 6 gene2 indv339      abaB  0.187 test_data %>% select(gene, qtl_af) %>%    unique %>% .$qtl_af %>%    hist(main = \"Histogram simulated QTL allele frequencies\",         xlab = \"QTL Af\",         col = \"cornflowerblue\") # Use this built in function to quickly visualize different theoretical allele  # frequency distributions, paramterized by  stampen:::beta_plotter(a = 2, b = 3) set.seed(128) test_data_2 <- simulate_null_haplotypes(n_indvs = 500, n_genes = 500,                                          qtl_alpha = 2, qtl_beta = 3) # new hps  test_data_2 %>% select(gene, qtl_af) %>%    unique %>% .$qtl_af %>%    hist(main = \"Histogram simulated QTL allele frequencies\",         xlab = \"QTL Af\",         col = \"firebrick\")"},{"path":"https://jeinson.github.io/stampen/articles/simulation_vignette.html","id":"haplotype-configuration-designations","dir":"Articles","previous_headings":"TLDR","what":"Haplotype configuration designations","title":"`stampen` Usage Vignette","text":"Let’s take look built haplotype configurations, consider “high-penetrance” “low-penetrance.” haplotype configuration analysis, important first step hypothesize whether higher expression nonmutated allele, lower inclusion mutated allele drives modified penetrance. Testing either decision one needs make. designations can adjusted easily user. sQTL hypothesis configuation, represents high exon inclusion alelle, represents low inclusion allele. (eQTL model, highly expressed allele, lowly expressed allele). Therefore, sQTL model, observation haplotype abAB means individual heteryzous sQTL, carries rare coding variant highly included allelic copy. configuration assigned 1 becuase model, configuration results increased penetrance coding variant, respect opposite configuration AbaB, coding variant now lower included allele, reduced penetrance. (See figure 1 Einson et. al. 2023) Next, use function characterize_haplotypes add two columns data frame haplotypes. new columns . beta: Represents high penetrance (1) low penetrance (0) configuration, defined input beta_config. hom: Boolean. individual homozygous QTL allele? exp_beta: hom == TRUE, calculated sqtl_af^2 / (sqtl_af^2 + (1 - sqtl_af^2)). hom == TRUE, .e. haplotype hetorozygous, assign 0.5. practice, sqtl_af allele frequency penetrance driving allele. sQTLs, frequency high exon inclusion alelle, eQTLs, allele frequency lower expressed allele.","code":"data('beta_config_sqtl') beta_config_sqtl #> abAB ABab abaB aBab AbaB aBAb AbAB ABAb  #>    1    1    1    1    0    0    0    0 data('beta_config_eqtl') beta_config_eqtl #> abAB ABab abaB aBab AbaB aBAb AbAB ABAb  #>    0    0    1    1    1    1    0    0 test_data_incl_beta <-    characterize_haplotypes(test_data, beta_config = beta_config_sqtl)  head(test_data_incl_beta, 20) #>      gene    indv haplotype sqtl_af beta   hom   exp_beta #> 1   gene1 indv462      abaB   0.135    1  TRUE 0.02377846 #> 2   gene2 indv126      ABab   0.187    1 FALSE 0.50000000 #> 3   gene2 indv177      aBab   0.187    1  TRUE 0.05024729 #> 4   gene2 indv215      aBab   0.187    1  TRUE 0.05024729 #> 5   gene2 indv268      abaB   0.187    1  TRUE 0.05024729 #> 6   gene2 indv339      abaB   0.187    1  TRUE 0.05024729 #> 7   gene2 indv345      abAB   0.187    1 FALSE 0.50000000 #> 8   gene2 indv484      abaB   0.187    1  TRUE 0.05024729 #> 9   gene5  indv91      abaB   0.064    1  TRUE 0.00465353 #> 10  gene5 indv206      abaB   0.064    1  TRUE 0.00465353 #> 11  gene5 indv269      aBab   0.064    1  TRUE 0.00465353 #> 12  gene5 indv366      aBab   0.064    1  TRUE 0.00465353 #> 13  gene6 indv465      aBab   0.117    1  TRUE 0.01725407 #> 14  gene8  indv69      aBab   0.341    1  TRUE 0.21120419 #> 15  gene8 indv152      aBab   0.341    1  TRUE 0.21120419 #> 16  gene8 indv208      ABab   0.341    1 FALSE 0.50000000 #> 17  gene8 indv287      ABab   0.341    1 FALSE 0.50000000 #> 18  gene8 indv293      abAB   0.341    1 FALSE 0.50000000 #> 19  gene8 indv480      abaB   0.341    1  TRUE 0.21120419 #> 20 gene10   indv7      ABAb   0.721    0  TRUE 0.86976185"},{"path":"https://jeinson.github.io/stampen/articles/simulation_vignette.html","id":"test-for-depletion-of-high-penetrance-haplotypes","dir":"Articles","previous_headings":"TLDR","what":"Test for depletion of high penetrance haplotypes","title":"`stampen` Usage Vignette","text":"Now use calculate_epsilon bootstrap_test functions calculate depletion, call epsilon, get significance depletion.  Now demonstration, let’s remove “high penetrance” haplotypes show sensitive test detecing signal.","code":"calculate_epsilon(dataset = test_data_incl_beta) #> [1] -0.008338446 test_res <- bootstrap_test(test_data_incl_beta, B = 1000) test_res #>   bootstrap_p       epsilon         lower         upper  n_haplotypes  #>   0.720000000  -0.008338446  -0.051953185   0.035550769 773.000000000 # Make a nice figure ggplot(data.frame(t(test_res)),         aes(y = epsilon, x = \"baseline\", ymin = lower, ymax = upper)) +    geom_pointrange() +    geom_hline(yintercept = 0, lty = 3) +    ylim(-.1, .1) +    ylab(\"ε\") +   theme_classic() +   theme(axis.text.y = element_blank(),         axis.title.y = element_blank(),         legend.position = \"none\") +   coord_flip() +   theme(axis.ticks.y = element_blank(),         axis.text.y = element_blank(),         axis.line.y = element_blank()) idx <- which(test_data_incl_beta$beta == 1) idx.removed <- sample(idx, .15 * length(idx), replace = F)  test_data_incl_beta_depleted <- test_data_incl_beta[-idx.removed,] test_res_depl <- bootstrap_test(test_data_incl_beta_depleted) plt <- data.frame(rbind(test_res, test_res_depl)) plt <- tibble::rownames_to_column(plt) n_pos = .2; pval_pos = .15 ggplot(plt,        aes(y = epsilon, x = \"baseline\", col = rowname, ymin = lower, ymax = upper)) +    geom_pointrange(position = position_dodge(.5)) +    geom_hline(yintercept = 0, lty = 3) +    ylim(-.2, .2) +    ylab(\"ε\") +   # The P-value label   geom_text(mapping = aes(y = pval_pos, label = bootstrap_p),             position = position_dodge(width = .5)) +      # The N-sample label   geom_text(mapping = aes(y = n_pos, label = prettyNum(n_haplotypes, big.mark = \",\")),             position = position_dodge(width = .5)) +   theme_classic() +   theme(axis.text.y = element_blank(),         axis.title.y = element_blank()) +   coord_flip() +   theme(axis.ticks.y = element_blank(),         axis.text.y = element_blank(),         axis.line.y = element_blank())"},{"path":"https://jeinson.github.io/stampen/articles/simulation_vignette.html","id":"run-the-tutorial","dir":"Articles","previous_headings":"TLDR","what":"Run the tutorial","title":"`stampen` Usage Vignette","text":"","code":"# calculate_epsilon(test_data, beta_config = beta_config_sqtl)"},{"path":"https://jeinson.github.io/stampen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonah Einson. Author, maintainer. Pejman Mohammadi. Author.","code":""},{"path":"https://jeinson.github.io/stampen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Einson J, Mohammadi P (2023). stampen: [Sta]tistics [M]odified [Pen]etrance. R package version 0.2.0, https://jeinson.github.io/stampen/.","code":"@Manual{,   title = {stampen: [Sta]tistics for [M]odified [Pen]etrance},   author = {Jonah Einson and Pejman Mohammadi},   year = {2023},   note = {R package version 0.2.0},   url = {https://jeinson.github.io/stampen/}, }"},{"path":"https://jeinson.github.io/stampen/index.html","id":"stampen","dir":"","previous_headings":"","what":"[Sta]tistics for [M]odified [Pen]etrance","title":"[Sta]tistics for [M]odified [Pen]etrance","text":"[Sta]tistic [M]odified [Pen]etrance (Inspired Jazz Bar Stockholm, SE)[https://www.stampen.se/] repository contains R package implementation Test Modified penetrance Castel et. al. 2018 Currently work progress! Proceed caution Check usage Vignette: https://jeinson.github.io/stampen/ install R","code":"library(devtools) install_github(\"jeinson/tompen\")"},{"path":"https://jeinson.github.io/stampen/reference/beta_config_eqtl.html","id":null,"dir":"Reference","previous_headings":"","what":"beta_config_eqtl — beta_config_eqtl","title":"beta_config_eqtl — beta_config_eqtl","text":"...","code":""},{"path":"https://jeinson.github.io/stampen/reference/beta_config_eqtl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"beta_config_eqtl — beta_config_eqtl","text":"","code":"beta_config_eqtl"},{"path":"https://jeinson.github.io/stampen/reference/beta_config_eqtl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"beta_config_eqtl — beta_config_eqtl","text":"...","code":""},{"path":"https://jeinson.github.io/stampen/reference/beta_config_sqtl.html","id":null,"dir":"Reference","previous_headings":"","what":"beta_config_sqtl — beta_config_sqtl","title":"beta_config_sqtl — beta_config_sqtl","text":"...","code":""},{"path":"https://jeinson.github.io/stampen/reference/beta_config_sqtl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"beta_config_sqtl — beta_config_sqtl","text":"","code":"beta_config_sqtl"},{"path":"https://jeinson.github.io/stampen/reference/beta_config_sqtl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"beta_config_sqtl — beta_config_sqtl","text":"...","code":""},{"path":"https://jeinson.github.io/stampen/reference/beta_mom_estimator.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta Method-of-Moments Estimator — beta_mom_estimator","title":"Beta Method-of-Moments Estimator — beta_mom_estimator","text":"useful function estimating parameters beta distribution generated given data. Returns estimated alpha beta values","code":""},{"path":"https://jeinson.github.io/stampen/reference/beta_mom_estimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta Method-of-Moments Estimator — beta_mom_estimator","text":"","code":"beta_mom_estimator(x)"},{"path":"https://jeinson.github.io/stampen/reference/beta_mom_estimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta Method-of-Moments Estimator — beta_mom_estimator","text":"x vector beta-distributed values (0 1)","code":""},{"path":"https://jeinson.github.io/stampen/reference/beta_plotter.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta plotting function — beta_plotter","title":"Beta plotting function — beta_plotter","text":"function simply used plot beta distribution, give user sense simulated allele frequency distribution looks like.","code":""},{"path":"https://jeinson.github.io/stampen/reference/beta_plotter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta plotting function — beta_plotter","text":"","code":"beta_plotter(a, b, ...)"},{"path":"https://jeinson.github.io/stampen/reference/beta_plotter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta plotting function — beta_plotter","text":"alpha parameter beta distribution b beta parameter beta distribution ... Additional arguments plot function","code":""},{"path":"https://jeinson.github.io/stampen/reference/bootstrap_comparison_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a new test for comparing the means of samples — bootstrap_comparison_test","title":"Define a new test for comparing the means of samples — bootstrap_comparison_test","text":"function uses similar principal standard bootstrap test, takes input two sets haplotypes, compares epsilon values significantly different. useful bias affecting equally.","code":""},{"path":"https://jeinson.github.io/stampen/reference/bootstrap_comparison_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a new test for comparing the means of samples — bootstrap_comparison_test","text":"","code":"bootstrap_comparison_test(haps_1, haps_2, exp_beta = \"exp_beta\", B = 1000)"},{"path":"https://jeinson.github.io/stampen/reference/bootstrap_comparison_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a new test for comparing the means of samples — bootstrap_comparison_test","text":"haps_1 output `characterize_haplotypes`, another haplotype calling tool. one line per haplotype. Must contain column \"beta\". haps_2 output `characterize_haplotypes`, another haplotype calling tool. one line per haplotype. Must contain column \"beta\". exp_beta nuame column \"haps\" contains expectation beta. Defaults \"exp_beta\" B number bootstraps run","code":""},{"path":"https://jeinson.github.io/stampen/reference/bootstrap_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a bootstrapped p-value — bootstrap_test","title":"Calculate a bootstrapped p-value — bootstrap_test","text":"function takes input data returns p-value null hypothesis haplotype configurations influence coding variant penetrance significantly enriched population. p-value estimated bootstrapping procedure, confidence interval returned.","code":""},{"path":"https://jeinson.github.io/stampen/reference/bootstrap_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a bootstrapped p-value — bootstrap_test","text":"","code":"bootstrap_test(haps, exp_beta = \"exp_beta\", B = 1000)"},{"path":"https://jeinson.github.io/stampen/reference/bootstrap_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a bootstrapped p-value — bootstrap_test","text":"haps output `characterize_haplotypes`, another haplotype calling tool. one line per haplotype. Must contain column \"beta\" \"exp_beta\" exp_beta nuame column \"haps\" contains expectation beta. Defaults \"exp_beta\" B number bootstraps perform. Default: 1000","code":""},{"path":"https://jeinson.github.io/stampen/reference/calculate_epsilon.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate epsilon — calculate_epsilon","title":"Calculate epsilon — calculate_epsilon","text":"function calculates value epsilon, dependent value beta expected value beta given haplotype combination observed set haplotypes based phased genetic data.","code":""},{"path":"https://jeinson.github.io/stampen/reference/calculate_epsilon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate epsilon — calculate_epsilon","text":"","code":"calculate_epsilon(dataset, beta_config, ...)"},{"path":"https://jeinson.github.io/stampen/reference/calculate_epsilon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate epsilon — calculate_epsilon","text":"dataset set haplotype counts beta_config beta configuration (use either beta_config_eqtl beta_config_sqtl, included package) ... Additional arguments passed `characterize_haplotypes`","code":""},{"path":"https://jeinson.github.io/stampen/reference/characterize_haplotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape data and classify the haplotypes according to the model — characterize_haplotypes","title":"Reshape data and classify the haplotypes according to the model — characterize_haplotypes","text":"function takes haplotype configurations standard input format reshapes intuitive processing. See sample dataset","code":""},{"path":"https://jeinson.github.io/stampen/reference/characterize_haplotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape data and classify the haplotypes according to the model — characterize_haplotypes","text":"","code":"characterize_haplotypes(   dataset,   beta_config,   qtl_allele_frequency_column = \"qtl_af\",   gene_name_column = \"gene\" )"},{"path":"https://jeinson.github.io/stampen/reference/characterize_haplotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape data and classify the haplotypes according to the model — characterize_haplotypes","text":"dataset data.frame tibble. input dataset. See sample data format beta_config Vector. values assigned beta haplotype possibility. can changed tweak hypothesis. Values provided package `beta_config_eqtl` `beta_config_sqtl`, depending hypothesis testing. qtl_allele_frequency_column String. name column input data QTL allele frequencies. Default: `sqtl_af` modified penetrance hypothesis. gene_name_column String. name column input data gene name. Default: `gene`","code":""},{"path":"https://jeinson.github.io/stampen/reference/poison_binomial_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a poisson-binomial p-value — poison_binomial_test","title":"Calculate a poisson-binomial p-value — poison_binomial_test","text":"function takes input data returns p-value null hypothesis haplotype configurations influence coding variant penetrance significangtly enriched population. p-value calculated analytically using poisson-binomial distribuion, distribution sum n independent identically distributed bernoulli random variables.","code":""},{"path":"https://jeinson.github.io/stampen/reference/poison_binomial_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a poisson-binomial p-value — poison_binomial_test","text":"","code":"poison_binomial_test(haps)"},{"path":"https://jeinson.github.io/stampen/reference/poison_binomial_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a poisson-binomial p-value — poison_binomial_test","text":"haps output `characterize_haplotypes`, another haplotype calling tool. one line per haplotype","code":""},{"path":"https://jeinson.github.io/stampen/reference/simulate_null_haplotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for generating fake data — simulate_null_haplotypes","title":"A function for generating fake data — simulate_null_haplotypes","text":"function can simulate haplotype combinations based allele frequencies sampled beta distributions. qtl frequencies assumed represent higher expressed allele. qtl frequencies drawn beta distribution, defined parameters `qtl_alpha` `qtl_beta`","code":""},{"path":"https://jeinson.github.io/stampen/reference/simulate_null_haplotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for generating fake data — simulate_null_haplotypes","text":"","code":"simulate_null_haplotypes(   n_indvs,   n_genes,   c_alpha = 0.656,   c_beta = 437.47,   qtl_alpha = 1,   qtl_beta = 1,   maf_cutoff = 0.05 )"},{"path":"https://jeinson.github.io/stampen/reference/simulate_null_haplotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for generating fake data — simulate_null_haplotypes","text":"n_indvs number individuals simulate n_genes number genes simulate c_alpha shape parameter csnp allele frequency. Default = 4 c_beta shape parameter beta csnp allele frequency. Default = 3000 qtl_alpha shape parameter alpha qtl allele frequency. Default = 1 qtl_beta shape paramteter beta qtl allele frequency. Default = 1 maf_cutoff cutoff minimum qtl allele frequency simulating data. force beta distribution qtl allele frequency limits.","code":""},{"path":"https://jeinson.github.io/stampen/reference/simulate_null_haplotypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for generating fake data — simulate_null_haplotypes","text":"","code":"simulate_null_haplotypes(n_indvs = 100, n_genes = 5) #>    gene   indv haplotype qtl_af #> 1 gene5 indv67      aBAb   0.34"},{"path":"https://jeinson.github.io/stampen/reference/test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Some simulated haplotype count data from 1000 individuals and 500 genes — test_data","title":"Some simulated haplotype count data from 1000 individuals and 500 genes — test_data","text":"file result simulate_data.R script, saved faster bootstrap testing. simulated, dependence coding allele sqtl allele, result test null","code":""},{"path":"https://jeinson.github.io/stampen/reference/test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Some simulated haplotype count data from 1000 individuals and 500 genes — test_data","text":"","code":"test_data"},{"path":"https://jeinson.github.io/stampen/reference/test_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Some simulated haplotype count data from 1000 individuals and 500 genes — test_data","text":"data frame 500 rows 10 columns gene simulated gene name sqtl_af frequency higher included sQTL haplotype [Aa][Bb][Aa][Bb] counts haplotype configuration across 1000 individuals","code":""}]
